load("@rules_go//proto:def.bzl", "go_proto_library")
load("@rules_proto//proto:defs.bzl", "proto_library")

package(default_visibility = ["//visibility:public"])

proto_library(
    name = "foo_proto",
    srcs = ["foo.proto"],
    deps = ["@com_google_protobuf//:any_proto"],
)

# Broken because rules_python's py_proto_library doesnt produce the same
# PyInfo symbol that py_test expects.
# load("@rules_python//python:proto.bzl", "py_proto_library")
# py_proto_library(
#     name = "foo_py_proto",
#     deps = [":foo_proto"],
# )

# Broken by https://github.com/protocolbuffers/protobuf/pull/19679
# which causes building C++ code from source.
# TODO: re-enable once protobuf honors the toolchain
# java_proto_library(
#     name = "foo_java_proto",
#     deps = [":foo_proto"],
# )

go_proto_library(
    name = "foo_go_proto",
    importpath = "example.com/foo_proto",
    proto = ":foo_proto",
)
