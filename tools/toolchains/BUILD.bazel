"""Define a non-functional cc toolchain.

To fail-fast in cases where we are forced to compile third-party C++ code,
define a cc toolchain that doesn't work, by using 'false' as the compiler.
See https://bazel.build/tutorials/ccp-toolchain-config
"""

load("defs.bzl", "cc_toolchain_config")

filegroup(name = "empty")

cc_toolchain_config(name = "noop_toolchain_config")

cc_toolchain(
    name = "noop_toolchain",
    all_files = ":empty",
    compiler_files = ":empty",
    dwp_files = ":empty",
    linker_files = ":empty",
    objcopy_files = ":empty",
    strip_files = ":empty",
    supports_param_files = 0,
    toolchain_config = ":noop_toolchain_config",
    toolchain_identifier = "noop-toolchain",
)

toolchain(
    name = "cc_toolchain",
    toolchain = ":noop_toolchain",
    toolchain_type = "@bazel_tools//tools/cpp:toolchain_type",
)
